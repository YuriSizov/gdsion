<?xml version="1.0" encoding="UTF-8" ?>
<class name="SiMMLVoice" inherits="RefCounted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Container for the simulated instrument voice configuration. Base class for [SiONVoice].
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_channel_num" qualifiers="const">
			<return type="int" />
			<description>
				Returns the number of channels used by this voice.
			</description>
		</method>
		<method name="get_channel_params" qualifiers="const">
			<return type="SiOPMChannelParams" />
			<description>
				Returns a reference to the [SiOPMChannelParams] instance used by this voice.
			</description>
		</method>
		<method name="get_chip_type" qualifiers="const">
			<return type="int" enum="SiONChipType" />
			<description>
				Returns the sound chip type used by this voice.
			</description>
		</method>
		<method name="get_module_type" qualifiers="const">
			<return type="int" enum="SiONModuleType" />
			<description>
				Returns the module type used by this voice.
			</description>
		</method>
		<method name="get_tone_num" qualifiers="const">
			<return type="int" />
			<description>
				Returns the tone number used by modules like PSG and APU.
			</description>
		</method>
		<method name="is_fm_voice" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether this is an FM voice.
			</description>
		</method>
		<method name="is_pcm_voice" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether this is a PCM voice.
			</description>
		</method>
		<method name="is_sampler_voice" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether this is a sampler voice.
			</description>
		</method>
		<method name="is_wave_table_voice" qualifiers="const">
			<return type="bool" />
			<description>
				Returns whether this is a wave table voice.
			</description>
		</method>
		<method name="set_channel_num">
			<return type="void" />
			<param index="0" name="num" type="int" />
			<description>
				Sets the number of channels for this voice.
			</description>
		</method>
		<method name="set_chip_type">
			<return type="void" />
			<param index="0" name="type" type="int" enum="SiONChipType" />
			<description>
				Sets the sound chip type for this voice.
			</description>
		</method>
		<method name="set_module_type">
			<return type="void" />
			<param index="0" name="module_type" type="int" enum="SiONModuleType" />
			<param index="1" name="channel_num" type="int" default="0" />
			<param index="2" name="tone_num" type="int" default="-1" />
			<description>
				Sets the module type for this voice.
			</description>
		</method>
		<method name="set_tone_num">
			<return type="void" />
			<param index="0" name="num" type="int" />
			<description>
				Sets the tone number for this voice. Used by modules like PSG and APU.
			</description>
		</method>
	</methods>
	<members>
		<member name="expression" type="int" setter="set_expression" getter="get_expression" default="128">
			Expression component of the volume.
		</member>
		<member name="expression_mode" type="int" setter="set_expression_mode" getter="get_expression_mode" default="0">
			Expression to level conversion table mode. Can be set by an expression mode MML command ([code]%x[/code]). See also [member velocity_mode].
		</member>
		<member name="update_track_parameters" type="bool" setter="set_update_track_parameters" getter="should_update_track_parameters" default="true">
			Flag that determines whether tracks and their channels should be updated according to this voice.
		</member>
		<member name="update_volumes" type="bool" setter="set_update_volumes" getter="should_update_volumes" default="false">
			Flag that determines whether velocity and expression of tracks should be updated according to this voice.
		</member>
		<member name="velocity" type="int" setter="set_velocity" getter="get_velocity" default="256">
			Velocity component of the volume.
		</member>
		<member name="velocity_mode" type="int" setter="set_velocity_mode" getter="get_velocity_mode" default="0">
			Velocity to level conversion table mode. Can be set by a velocity mode MML command ([code]%v[/code]).
			[codeblock lang=text]
				0 - linear scale.
				1 - log scale; dynamic range = 96dB; total level based.
				2 - log scale; dynamic range = 64dB; fmp7 based.
				3 - log scale; dynamic range = 48dB; PSG volume based.
				4 - log scale; dynamic range = 32dB; based on N88 basic v command.
			[/codeblock]
		</member>
		<member name="velocity_shift" type="int" setter="set_velocity_shift" getter="get_velocity_shift" default="4">
			Velocity shift amount. Can be set by a velocity mode MML command ([code]%v[/code]).
		</member>
	</members>
</class>
